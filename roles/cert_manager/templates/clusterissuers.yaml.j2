apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    email: {{ le_email }}
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef: { name: le-staging-key }
    solvers:
      - selector: { dnsNames: [{{ rancher_fqdn }}] }
        http01:
          ingress:
            ingressClassName: {{ rancher_ingress_class }}
            ingressTemplate:
              metadata:
                annotations:
                  nginx.ingress.kubernetes.io/ssl-redirect: "false"
                  nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      - selector: { dnsNames: [{{ ops_fqdn }}] }
        http01:
          ingress:
            ingressClassName: {{ ops_ingress_class }}
            ingressTemplate:
              metadata:
                annotations:
                  nginx.ingress.kubernetes.io/ssl-redirect: "false"
                  nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    email: {{ le_email }}
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef: { name: le-prod-key }
    solvers:
      - selector: { dnsNames: [{{ rancher_fqdn }}] }
        http01:
          ingress:
            ingressClassName: {{ rancher_ingress_class }}
            ingressTemplate:
              metadata:
                annotations:
                  nginx.ingress.kubernetes.io/ssl-redirect: "false"
                  nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      - selector: { dnsNames: [{{ ops_fqdn }}] }
        http01:
          ingress:
            ingressClassName: {{ ops_ingress_class }}
            ingressTemplate:
              metadata:
                annotations:
                  nginx.ingress.kubernetes.io/ssl-redirect: "false"
                  nginx.ingress.kubernetes.io/force-ssl-redirect: "false"

