---
- name: Ensure br_netfilter is loaded
  shell: lsmod | grep br_netfilter || modprobe br_netfilter
  become: true
  changed_when: false
  failed_when: false

- name: Ensure /etc/rancher/rke2 exists
  file:
    path: /etc/rancher/rke2
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: true

- name: Set default rke2_node_name before config placement
  ansible.builtin.set_fact:
    rke2_node_name: "{{ inventory_hostname }}"

- name: Detect primary IPv4 on worker
  shell: "ip route get 1.1.1.1 | awk '{print $7}'"
  register: primary_ip
  changed_when: false

- name: Set node_ip fact
  set_fact:
    node_ip: "{{ primary_ip.stdout }}"

- name: Place agent config
  template:
    src: config.yaml.j2
    dest: /etc/rancher/rke2/config.yaml
    mode: "0644"
  become: true
  notify: restart rke2-agent
  changed_when: false

- name: Check if rke2-agent service file exists
  stat:
    path: /usr/local/lib/systemd/system/rke2-agent.service
  register: rke2_agent_service_file

- name: Stop and disable rke2-agent service if present
  systemd:
    name: rke2-agent
    state: stopped
    enabled: false
    daemon_reload: yes
  become: true
  when: rke2_agent_service_file.stat.exists

- name: Remove rke2-agent systemd unit file
  file:
    path: /etc/systemd/system/rke2-agent.service
    state: absent
  become: true
  ignore_errors: true

- name: Remove rke2-agent binary
  file:
    path: /usr/local/bin/rke2
    state: absent
  become: true
  ignore_errors: true

- name: Remove rke2-agent data directory
  file:
    path: /var/lib/rancher/rke2
    state: absent
  become: true
  ignore_errors: true

- name: Install RKE2 agent (idempotent)
  shell: |
    curl -sfL https://get.rke2.io | INSTALL_RKE2_CHANNEL={{ rke2_channel }} sh -
  args:
    creates: /usr/local/bin/rke2
  become: true

- name: Enable & start rke2-agent (fallback async)
  systemd:
    name: rke2-agent
    enabled: true
    state: started
    daemon_reload: yes
  become: true
  async: 600
  poll: 0
  register: rke2_async_job
  when: not cni_installed | default(false)

- name: Enable & start rke2-agent (async)
  systemd:
    name: rke2-agent
    enabled: true
    state: started
    daemon_reload: yes
  become: true
  async: 600
  poll: 0
  register: rke2_async_job
  when: cni_installed | default(false)

- name: Wait for rke2-agent to be active
  async_status:
    jid: "{{ rke2_async_job.ansible_job_id }}"
  register: rke2_async_result
  until: rke2_async_result.finished
  retries: 60
  delay: 10
  when: cni_installed | default(false)

- name: Wait for rke2-agent to be fully active
  shell: systemctl show rke2-agent --property=ActiveState --value
  register: agent_state
  retries: 20
  delay: 6
  until: agent_state.stdout_lines[0] == "active"
  changed_when: false
  failed_when: false
  when: cni_installed | default(false)

- name: Set effective rke2 node name using hostname
  ansible.builtin.set_fact:
    rke2_node_name: "{{ ansible_hostname | default(inventory_hostname) }}"
  when: rke2_node_name is not defined or rke2_node_name == ''

- name: Check current node-ip in config.yaml
  shell: "grep '^node-ip:' /etc/rancher/rke2/config.yaml | awk '{print $2}'"
  register: current_node_ip
  changed_when: false
  failed_when: false

- name: Fix node-ip mismatch by rewriting config and restarting
  when: current_node_ip.stdout is defined and current_node_ip.stdout | trim != node_ip | trim
  block:
    - name: Rewrite agent config with detected primary IP
      template:
        src: config.yaml.j2
        dest: /etc/rancher/rke2/config.yaml
      become: true
      notify: restart rke2-agent
      changed_when: false
    - name: Wait for rke2-agent to be fully active after IP fix
      shell: systemctl show rke2-agent --property=ActiveState --value
      register: agent_state_ipfix
      retries: 20
      delay: 6
      until: agent_state_ipfix.stdout_lines[0] == "active"
      changed_when: false
      failed_when: false
      when: cni_installed | default(false)

- name: Restart rke2-agent if force_rejoin is true
  when: force_rejoin
  ansible.builtin.systemd:
    name: rke2-agent
    state: restarted
  become: true

